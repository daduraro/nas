client_max_body_size 0;
server_tokens off;
resolver 127.0.0.11 ipv6=off; # internal docker dns resolver

# list of internal ips
geo $local_ip {
    default 0;
    192.168.0.0/24 1;
}


# redirect http to https
server {    
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

# ssl values
ssl_certificate /etc/nginx/certs/default.crt;
ssl_certificate_key /etc/nginx/certs/default.key;
ssl_dhparam /etc/nginx/certs/dhparam.pem;

server {
    listen 443 ssl;
    server_name pihole.*;

    if ( $local_ip = 0 ) { return 403; }
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
    location / {
        set $target "http://pihole:80";
        rewrite /(.*) /admin/$1 break;
        proxy_redirect /admin /;
        proxy_pass $target;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name oc.*;

    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
	client_max_body_size 0;
        set $target "http://owncloud:8080";
        proxy_read_timeout 180s;
	proxy_send_timeout 180s;
        proxy_pass $target;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_buffering off;
    }
}

server {
    listen 443 ssl default_server;
    server_name _;
    return 404;
}
